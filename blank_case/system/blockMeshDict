/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//convertToMeters 100;


vertices
(
    (0 0 0)       // 0 - Origin
    (5 0 0)       // 1 - Right
    (5 5 0)       // 2 - Top Right
    (0 5 0)       // 3 - Top
    (0 -5 0)       // 4 - Bottom
    (5 -5 0)       // 5 - Bottom Right
    (-5 5 0)       // 6 - Top Left
    (-5 0 0)        // 7 - Left
    (-5 -5 0)       // 8 - Bottom Left

    (0 0 0.1)       // 0 - 
    (5 0 0.1)       // 1 - 
    (5 5 0.1)       // 2 - 
    (0 5 0.1)       // 3 - 
    (0 -5 0.1)       // 4 - 
    (5 -5 0.1)       // 5 - 
    (-5 5 0.1)       // 6 - 
    (-5 0 0.1)
    (-5 -5 0.1)


    
);

blocks
(
    hex (0 1 2 3 9 10 11 12) (50 50 1) simpleGrading (1 1 1) //Top Right
    hex (0 4 5 1 9 13 14 10) (50 50 1) simpleGrading (1 1 1) //Bottom Right
    hex (0 3 6 7 9 12 15 16) (50 50 1) simpleGrading (1 1 1) //Top Left
    hex (0 7 8 4 9 16 17 13) (50 50 1) simpleGrading (1 1 1) //Bottom Left
);





boundary
(


    top
    {
        type symmetryPlane;
        faces
        (
            (6 3 12 15)
            (3 2 11 12)
        );
    }
    ground
    {
        type symmetryPlane;
        faces
        (
            (8 4 13 17)
            (4 5 14 13)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (6 7 16 15)
            (7 8 17 16)
            
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (2 1 10 11)
            (1 5 14 10)
        );
    }
    side
    {
        type symmetryPlane;
        faces
        (
	    (6 7 0 3)
        (0 1 2 3)
        (8 4 0 7)
        (0 4 5 1)
        );
    }
    side2
    {
        type symmetryPlane;
        faces
        (
	    (9 10 11 12)
        (13 14 10 9)
        (16 9 12 15)
        (16 17 13 9)
        );
    }
);

// ************************************************************************* //
